# Generated by Django 2.0.13 on 2019-03-17 17:55
from django.conf import settings
from django.db import migrations
from django.db.migrations import RunPython
from django.db.models.query_utils import Q
from django.urls import reverse


def forward(apps, schema_editor):
    Profile = apps.get_model("users", "Profile")
    # Local
    for profile in Profile.objects.filter(user_id__isnull=False).filter(
        Q(inbox_private="") | Q(inbox_public="")
    ):
        url = reverse("users:profile-detail", kwargs={"uuid": profile.uuid})
        inbox_private = f"{settings.SOCIALHOME_URL}{url}inbox/"
        inbox_public = f'{settings.SOCIALHOME_URL}{reverse("federate:receive-public")}'
        Profile.objects.filter(id=profile.id).update(inbox_private=inbox_private, inbox_public=inbox_public)

    # Remote diaspora network
    for profile in Profile.objects.filter(user_id__isnull=True, handle__isnull=False, guid__isnull=False).filter(
        Q(inbox_private="") | Q(inbox_public="")
    ):
        inbox_private = f'https://{profile.handle.rsplit("@", 1)[1]}/receive/users/{profile.guid}'
        inbox_public = f'https://{profile.handle.rsplit("@", 1)[1]}/receive/public'
        Profile.objects.filter(id=profile.id).update(inbox_private=inbox_private, inbox_public=inbox_public)


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0035_add_profile_federation_inboxes'),
    ]

    operations = [
        RunPython(forward, RunPython.noop)
    ]
